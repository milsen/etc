#!/bin/bash --
#
# "XDG_CONFIG_HOME"/bash/bash_functions by milsen
#

# alert after command execution with terminal or error icon and command name
# example usage: sleep 10; alert
alert() {
  notify-send --urgency=low \
    -i "$([ $? = 0 ] && echo terminal || echo error)" \
    "$(history | tail -n1 | sed -e 's/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//')"
}


# backup data on external hard drive using rsync
backup_rsync() {
  directories="/run/media/$(whoami)/10fddcbf-b459-4cef-b5dd-aa20687df214"
  directories="$directories /run/media/$(whoami)/25e2b6bc-dfa7-4b4f-bafe-8a566be7e40f"
  directories="$directories /run/media/$(whoami)/1db7880b-83fc-4223-8dd8-d352e7be9853"

  target=""

  for dir in $directories; do
    if [ ! -d "$dir/" ]; then
      echo "No dir "$dir/" found."
    else
      target="$dir"
      break
    fi
  done

  if [ -z "$target" ]; then
    return
  fi

  sudo rsync -aAX \
    --info=progress2,symsafe,stats3 \
    --delete \
    --exclude={"/swapfile","/dev/*","/proc/*","/sys/*","/tmp/*","/run/*","/mnt/*","/media/*","/lost+found","/var/lib/dhcpcd/*"} \
    --temp-dir="$HOME"/.cache/rsync/tmp/ \
    / "$target"
}

bwpdf() {
  # Turn PDF into grayscale.
  gs \
    -sOutputFile="$2" \
    -sDEVICE=pdfwrite \
    -sColorConversionStrategy=Gray \
    -dProcessColorModel=/DeviceGray \
    -dCompatibilityLevel=1.4 \
    -dNOPAUSE \
    -dAutoRotatePages=/None \
    -dBATCH \
    "$1"
}


# fuzzy directory-change
cdf() {
  cd *"$1"*/
}


# most frequently used commands
mfu() {
  history | \
    awk '{CMD[$2]++;count++;}END {for (a in CMD)print CMD[a] " "  CMD[a]/count*100 "% " a;}' | \
    grep -v "./" | column -c3 -s " " -t | sort -nr | nl |  head "-n${1:-10}"
}

# restart the wlan-interface
net_restart() {
  interface="$(ip -brief link show | cut -d" " -f1 | grep "^wl")"

  if [ -z "$interface" ]; then
    echo "Wlan interface not found."
    return 1
  fi

  if [  "$(LC_ALL=C rfkill --output SOFT --noheadings list wlan)" == "blocked" ]; then
    echo "Unblock wlan interface blocked by rfkill."
    sudo rfkill unblock wlan
  fi

  systemctl restart wpa_supplicant@wlp61s0.service
}

create_passwd() {
  head /dev/urandom | tr -dc [:print:] | head -c "$1" ; echo ''
}

pc() {
  result="$(python -c "from math import *; print($*)")"
  echo -n "$result" | xsel -ib
  echo "$result"
}

# general function for system commands
q() {
  case "$1" in
    l|lock)     i3lock -c 282a2e ;;
    p|poweroff) systemctl poweroff ;;
    r|reboot)   systemctl reboot ;;
    s|suspend)  systemctl suspend ;;
    *)          return ;;
  esac
}

weather() {
  curl -s wttr.in/"$1"?"${2:-0}"
}

webcopy() {
  wget --mirror --convert-links --adjust-extension --page-requisites --no-parent "$1"
}

webcam_photo() {
  ffmpeg -f v4l2 -video_size 1280x720 -i /dev/video0 -vframes 1 "${1:-webcam.png}"
}

webcam_film() {
  ffmpeg -f v4l2 -video_size 1280x720 -i /dev/video0 \
    -f alsa -i default  \
    -c:v libx264 -preset ultrafast -c:a aac "${1:-webcam.mp4}"
}

unzip_album() {
  filename="$(basename "$1")"
  filename="${filename%.*}"
  artist="$(echo "$filename" | cut -d"-" -f1 | head -c -2)"
  album="$(echo "$filename" | cut -d"-" -f2- | tail -c +2)"
  dir="$HOME/media/music/$artist/$album/"
  echo $dir
  mkdir -p "$dir"
  unzip "$1" -d "$dir"
  for f in "$dir"/*.mp3; do
    "$HOME"/bin/tag "$f"
  done
}

mpa() {
  { nohup mpv --no-video --terminal=no --force-window=yes --idle=once "$*" > /dev/null 2>&1 & } && exit 0
}
